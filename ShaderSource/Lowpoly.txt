			struct Input
		{
			half filler;
			float3 worldPos;
		};

	
	Input vert (inout appdata_full v){
				 //v.vertex.xyz = v.normal * _Thickness;
				 Input i;
				 i.worldPos.xyz = mul(unity_ObjectToWorld, v.vertex);
				 return i;
		}



		void surf( Input i , inout SurfaceOutputStandard o )
		{
			float3 dpdx = ddx(i.worldPos);
			float3 dpdy = ddy(i.worldPos);
			float3 normal = normalize(cross(dpdy,dpdx));
			normal = float3(normal * 0.5 + 0.6);
			//float result = normal.x * normal.y * normal.z;	//dot(normal.x, normal.y);	  
			float result = dot(normal.x, normal.y) + dot(normal.y, normal.z);
			o.Albedo = _Color0 * result;
			o.Alpha = 1;
		}